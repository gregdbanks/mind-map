// List of AWS service names for visual distinction
export const awsServices = new Set([
  // Security Services
  'AWS GuardDuty',
  'GuardDuty',
  'Amazon Inspector',
  'Inspector',
  'AWS WAF',
  'WAF',
  'AWS Shield',
  'Shield',
  'AWS Security Hub',
  'Security Hub',
  'AWS CloudTrail',
  'CloudTrail',
  'AWS Config',
  'Config',
  'AWS IAM',
  'IAM',
  'AWS KMS',
  'KMS',
  'AWS Secrets Manager',
  'Secrets Manager',
  'AWS Certificate Manager',
  'ACM',
  'AWS CloudHSM',
  'CloudHSM',
  'AWS Directory Service',
  'Directory Service',
  'AWS Single Sign-On',
  'SSO',
  'AWS Cognito',
  'Cognito',
  'AWS Macie',
  'Macie',
  'AWS Detective',
  'Detective',
  'AWS Audit Manager',
  'Audit Manager',
  'AWS Artifact',
  'Artifact',
  'AWS Firewall Manager',
  'Firewall Manager',
  'AWS Network Firewall',
  'Network Firewall',
  'AWS PrivateLink',
  'PrivateLink',
  'AWS Transit Gateway',
  'Transit Gateway',
  // Compute
  'Amazon EC2',
  'EC2',
  'AWS Lambda',
  'Lambda',
  'Amazon ECS',
  'ECS',
  'Amazon EKS',
  'EKS',
  // Storage
  'Amazon S3',
  'S3',
  'Amazon EBS',
  'EBS',
  'Amazon EFS',
  'EFS',
  // Database
  'Amazon RDS',
  'RDS',
  'Amazon DynamoDB',
  'DynamoDB',
  'Amazon Aurora',
  'Aurora',
  // Networking
  'Amazon VPC',
  'VPC',
  'Amazon Route 53',
  'Route 53',
  'AWS Direct Connect',
  'Direct Connect',
  'Amazon CloudFront',
  'CloudFront',
  'Elastic Load Balancing',
  'ELB',
  'ALB',
  'NLB',
  // Analytics
  'Amazon Athena',
  'Athena',
  'Amazon Kinesis',
  'Kinesis',
  'Amazon Redshift',
  'Redshift',
  // Management
  'AWS CloudFormation',
  'CloudFormation',
  'AWS Systems Manager',
  'Systems Manager',
  'AWS CloudWatch',
  'CloudWatch',
  'AWS X-Ray',
  'X-Ray',
  // Integration
  'Amazon SNS',
  'SNS',
  'Amazon SQS',
  'SQS',
  'Amazon EventBridge',
  'EventBridge',
  'AWS Step Functions',
  'Step Functions'
]);

export function isAWSService(nodeName: string): boolean {
  // Check if the node name contains any AWS service
  const upperName = nodeName.toUpperCase();
  for (const service of awsServices) {
    if (upperName.includes(service.toUpperCase())) {
      return true;
    }
  }
  return false;
}